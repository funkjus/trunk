package org.mama.funckydude;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Locale;

public class AddForm extends JFrame {
    private JPanel mainPanel;
    private JPanel enterPanel;
    private JTextField nameTraderField;
    private JTextField urlTraderField;
    private JTextField adressTraderField;
    private JTextField nameGoodField;
    private JTextField priceGoodField;
    private JTextField colorGoodField;
    private JTextField sizeGoodField;
    private JLabel newName;
    private JLabel goodName;
    private JLabel nameTrader;
    private JLabel urlName;
    private JLabel nameAdress;
    private JLabel nameGood;
    private JLabel priceGood;
    private JLabel colorGood;
    private JLabel sizeGood;
    private JButton addTraderButton;
    private JButton addGoodButton;
    public JList listTraders;
    private JScrollPane scrollTraders;
    private JLabel nameTrad;

    public AddForm() {
        super("Новый продавец");
        setContentPane(mainPanel);

        scrollTraders.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scrollTraders.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        listTraders.setVisibleRowCount(2);
        listTraders.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        addTraderButton.addActionListener(e -> {
            Trader t = new Trader(nameTraderField.getText(), urlTraderField.getText(), adressTraderField.getText());
            MyStateManager.executeTrader(t);
        });

        addGoodButton.addActionListener(e -> nameTrad.setText("Компания не выбрана"));

        listTraders.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                Trader get = (Trader) listTraders.getSelectedValue();
                nameTrad.setText(get.getName());
                addGoodButton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        long trader_id = get.getId();
                        double price = Double.parseDouble(priceGoodField.getText());
                        if (trader_id != 0) {
                            Timestamp date = new Timestamp(new Date().getTime());
                            String sDate = date.toString();
                            GoodForWoman g = new GoodForWoman(nameGoodField.getText(), price, colorGoodField.getText(), sizeGoodField.getText(), trader_id, date, sDate);
                            MyStateManager.executeGood(g);
                        }
                    }
                });
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        enterPanel = new JPanel();
        enterPanel.setLayout(new GridBagLayout());
        mainPanel.add(enterPanel, BorderLayout.CENTER);
        nameTrader = new JLabel();
        nameTrader.setText("Имя");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(nameTrader, gbc);
        urlName = new JLabel();
        urlName.setText("URL");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(urlName, gbc);
        nameAdress = new JLabel();
        nameAdress.setText("Адресс");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(nameAdress, gbc);
        nameGood = new JLabel();
        nameGood.setText("Название");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(nameGood, gbc);
        priceGood = new JLabel();
        priceGood.setText("Цена");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(priceGood, gbc);
        colorGood = new JLabel();
        colorGood.setText("Цвет");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(colorGood, gbc);
        sizeGood = new JLabel();
        sizeGood.setText("Размер");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 12;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(sizeGood, gbc);
        nameTraderField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(nameTraderField, gbc);
        urlTraderField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(urlTraderField, gbc);
        adressTraderField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(adressTraderField, gbc);
        nameGoodField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(nameGoodField, gbc);
        priceGoodField = new JTextField();
        Font priceGoodFieldFont = this.$$$getFont$$$(null, -1, -1, priceGoodField.getFont());
        if (priceGoodFieldFont != null) priceGoodField.setFont(priceGoodFieldFont);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(priceGoodField, gbc);
        colorGoodField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(colorGoodField, gbc);
        sizeGoodField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 12;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(sizeGoodField, gbc);
        newName = new JLabel();
        newName.setText("Новая компания");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(newName, gbc);
        goodName = new JLabel();
        goodName.setText("Добавить товар");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(goodName, gbc);
        addTraderButton = new JButton();
        addTraderButton.setText("Добавить");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(addTraderButton, gbc);
        addGoodButton = new JButton();
        addGoodButton.setText("Добавить");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 13;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        enterPanel.add(addGoodButton, gbc);
        scrollTraders = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        enterPanel.add(scrollTraders, gbc);
        listTraders = new JList();
        scrollTraders.setViewportView(listTraders);
        nameTrad = new JLabel();
        nameTrad.setText("Выберите компанию");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        enterPanel.add(nameTrad, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
